/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from "kysely";

export type Generated<T> = T extends ColumnType<infer S, infer I, infer U>
  ? ColumnType<S, I | undefined, U>
  : ColumnType<T, T | undefined, T>;

export type Role = "admin" | "user";

export type Theme = "dark" | "light" | "system";

export type Timestamp = ColumnType<Date, Date | string, Date | string>;

export interface _User {
  _role: Generated<Role>;
  email: string;
  id: Generated<number>;
  password: string;
  username: string;
  xp: Generated<number>;
}

export interface Game {
  box_ids: number[] | null;
  date: Generated<Timestamp>;
  id: Generated<number>;
  player_ids: number[] | null;
  type_id: Generated<number>;
  winner_id: number;
}

export interface GameType {
  description: string | null;
  id: Generated<number>;
  name: string;
}

export interface UserSetting {
  _theme: Generated<Theme>;
  user_id: number;
}

export interface DB {
  _user: _User;
  game: Game;
  game_type: GameType;
  user_setting: UserSetting;
}